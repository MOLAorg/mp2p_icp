.. _app_sm2mm:

===============================
Application: ``sm2mm``
===============================

**Convert a `*.simplemap` file into a `*.mm` metric map using a pipeline configuration.**

.. contents::
   :local:


Synopsis
--------

The `sm2mm` command-line tool is a utility from the `mp2p_icp` project designed to transform a "simple map" file, a "key-frame map" typically generated by a SLAM system and having the `.simplemap` extension, 
into a "metric map" file (`.mm` extension). Recall that metric maps in mp2p_icp can have :ref:`multiple map layers <mp2p_icp_basics>`.
This conversion is performed by applying a user-defined processing pipeline, specified in a configuration file, to the simple map data.

This tool is  for post-processing SLAM outputs, enabling the generation of detailed and structured metric representations of the environment suitable for various applications, such as navigation, visualization, or further geometric analysis.


Pipeline file specification
-----------------------------
Pipeline configuration files are written in YAML format and define the sequence of operations to be applied to the raw sensor observations stored as map keyframes.

The pipeline can include various filters and generators that process the observations, such as downsampling, noise reduction, or feature extraction.
The pipeline file can also specify custom plugins to be loaded, which can define new metric map classes or custom filter algorithms.

Each pipeline file can contain these sections:

- `generators:`: A list of generators to create maps from each raw observations in each key-frame. If none is provided, the default :ref:`mp2p_icp::Generator <doxid-classmp2p__icp__filters_1_1_generator>` is used, which generates a point cloud from the observation.
- `filters:`: A list of filters to apply to each key-frame observations, after generators have been applied. For example, here one typically removes the robot body, de-skew the scan, downsamples the point cloud, and merges the result into one or several final metric map layers used to accumulate the result.
- `final_filters:`: An optional list of filters to apply to the final map layers, after all key-frames have been processed.

Refer to example pipeline files `sm2mm_*.yaml` under the `demos directory <https://github.com/MOLAorg/mp2p_icp/tree/master/demos>`_.

.. dropdown:: Example pipeline
    :icon: list-unordered

    .. literalinclude:: ../../../mp2p_icp/demos/sm2mm_pointcloud_voxelize.yaml
       :language: yaml


CLI Reference
-------------

.. code-block:: bash

    USAGE: 

    sm2mm  [--to-index <0>] [--from-index <0>] [--no-progress-bar]
            [--externals-dir <<ExternalsDirectory>>] [-v <INFO>] [-p
            <pipeline.yaml>] [-l <foobar.so>] -o <out.mm> -i <map.simplemap>
            [--] [--version] [-h]


    Where: 

    --to-index <0>
        If provided, the simplemap keyframes will be processed up to this
        index only.

    --from-index <0>
        If provided, the simplemap keyframes until this index will be
        discarded and it will start at this point.

    --no-progress-bar
        Disables the progress bar. Useful for cleaner output when using DEBUG
        verbosity level.

    --externals-dir <<ExternalsDirectory>>
        Lazy-load base directory for datasets with externally-stored
        observations

    -v <INFO>,  --verbosity <INFO>
        Verbosity level: ERROR|WARN|INFO|DEBUG (Default: INFO)

    -p <pipeline.yaml>,  --pipeline <pipeline.yaml>
        YAML file with the mp2p_icp_filters pipeline to load. It can
        optionally contain a `filters:`, a `generators:`, and a
        `final_filters:` sections. If this argument is not provided, the
        default generator will be used and no filtering will be applied, which
        might be ok in some cases. See the app README for
        examples:

        https://github.com/MOLAorg/mp2p_icp/tree/develop/apps/sm2mm

    -l <foobar.so>,  --load-plugins <foobar.so>
        One or more (comma separated) *.so files to load as plugins, e.g.
        defining new CMetricMap classes

    -o <out.mm>,  --output <out.mm>
        (required)  Output .mm file to write to

    -i <map.simplemap>,  --input <map.simplemap>
        (required)  Input .simplemap file

    --,  --ignore_rest
        Ignores the rest of the labeled arguments following this flag.

    --version
        Displays version information and exits.

    -h,  --help
        Displays usage information and exits.

