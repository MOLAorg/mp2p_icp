# Based on GTSAM file (by @ProfFan)
name: CI Build colcon

on: [push]

jobs:
  build_docker: # On Linux, iterates on all ROS 1 and ROS 2 distributions.
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive
    strategy:
      matrix:
        # Define the Docker image(s) associated with each ROS distribution.
        # The include syntax allows additional variables to be defined, like
        # docker_image in this case. See documentation:
        # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-including-configurations-in-a-matrix-build
        #
        # Platforms are defined in REP 3 and REP 2000:
        # https://ros.org/reps/rep-0003.html
        # https://ros.org/reps/rep-2000.html
        include:
          # Humble Hawksbill (May 2022 - May 2027)
          - docker_image: ubuntu:jammy
            ros_distribution: humble
            use_ros_testing: false

          - docker_image: ubuntu:jammy
            ros_distribution: humble
            use_ros_testing: true

          # Jazzy (2024 - ??)
          - docker_image: ubuntu:noble
            ros_distribution: jazzy
            use_ros_testing: false

          - docker_image: ubuntu:noble
            ros_distribution: jazzy
            use_ros_testing: true

          # Rolling Ridley (No End-Of-Life)
          - docker_image: ubuntu:noble
            ros_distribution: rolling
            use_ros_testing: false

          - docker_image: ubuntu:noble
            ros_distribution: rolling
            use_ros_testing: true

    container:
      image: ${{ matrix.docker_image }}

    steps:
      - name: Checkout
        run: |
          apt-get -y update
          apt-get -y install git
          git clone https://github.com/$GITHUB_REPOSITORY.git --recursive "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git checkout $GITHUB_SHA
          git submodule update --init --recursive

      - name: setup ROS environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ matrix.ros_distribution }}
          use-ros2-testing: ${{ matrix.use_ros_testing }}

      - name: Install rosdep dependencies
        run: |
          . /opt/ros/*/setup.sh
          rosdep update
          rosdep install --from-paths . --ignore-src -r -y

      - name: Build with colcon
        run: |
          . /opt/ros/*/setup.sh
          env
          MAKEFLAGS="-j2" colcon build --symlink-install --parallel-workers 2 --event-handlers console_direct+
